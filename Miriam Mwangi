-- Step 1: Create the Database
CREATE DATABASE BookStoreDB;
USE BookStoreDB;

-- Step 2: Create Tables with Appropriate Data Types
-- CREATE table book_language
CREATE TABLE book_language (
    language_id INT AUTO_INCREMENT PRIMARY KEY,
    language_name VARCHAR(50) NOT NULL
);

-- CREATE table publisher
CREATE TABLE publisher (
    publisher_id INT AUTO_INCREMENT PRIMARY KEY,
    publisher_name VARCHAR(100) NOT NULL,
    contact_email VARCHAR(100)
);
--  CREATE table author
CREATE TABLE author (
    author_id INT AUTO_INCREMENT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50)
);
-- CREATE table book
CREATE TABLE book (
    book_id INT AUTO_INCREMENT PRIMARY KEY,
    title VARCHAR(150) NOT NULL,
    isbn VARCHAR(20) UNIQUE,
    publication_year YEAR,
    price DECIMAL(8, 2),
    publisher_id INT,
    language_id INT,
    FOREIGN KEY (publisher_id) REFERENCES publisher(publisher_id),
    FOREIGN KEY (language_id) REFERENCES book_language(language_id)
);

-- CREATE table book_author
CREATE TABLE book_author (
    book_id INT,
    author_id INT,
    PRIMARY KEY (book_id, author_id),
    FOREIGN KEY (book_id) REFERENCES book(book_id),
    FOREIGN KEY (author_id) REFERENCES author(author_id)
);

-- CREATE table country
CREATE TABLE country (
    country_id INT AUTO_INCREMENT PRIMARY KEY,
    country_name VARCHAR(100) NOT NULL
);

-- Create table address
CREATE TABLE address (
    address_id INT AUTO_INCREMENT PRIMARY KEY,
    street VARCHAR(255),
    city VARCHAR(100),
    postal_code VARCHAR(20),
    country_id INT,
    FOREIGN KEY (country_id) REFERENCES country(country_id)
);

-- CREATE table address_status
CREATE TABLE address_status (
    status_id INT AUTO_INCREMENT PRIMARY KEY,
    status_description VARCHAR(50) NOT NULL
);

-- CREATE table customer
CREATE TABLE customer (
    customer_id INT AUTO_INCREMENT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100) UNIQUE
);

-- CREATE table customer_address
CREATE TABLE customer_address (
    customer_id INT,
    address_id INT,
    status_id INT,
    PRIMARY KEY (customer_id, address_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),
    FOREIGN KEY (address_id) REFERENCES address(address_id),
    FOREIGN KEY (status_id) REFERENCES address_status(status_id)
);

-- CREATE table shipping_method
CREATE TABLE shipping_method (
    method_id INT AUTO_INCREMENT PRIMARY KEY,
    method_name VARCHAR(100)
);

-- CREATE table order_status
CREATE TABLE order_status (
    status_id INT AUTO_INCREMENT PRIMARY KEY,
    status_description VARCHAR(50)
);

-- CREATE table customer_order
CREATE TABLE customer_order (
    order_id INT AUTO_INCREMENT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    shipping_method_id INT,
    total_amount DECIMAL(10, 2),
    status_id INT,
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),
    FOREIGN KEY (shipping_method_id) REFERENCES shipping_method(method_id),
    FOREIGN KEY (status_id) REFERENCES order_status(status_id)
);

-- CREATE table order_line
CREATE TABLE order_line (
    order_line_id INT AUTO_INCREMENT PRIMARY KEY,
    order_id INT,
    book_id INT,
    quantity INT,
    price DECIMAL(8, 2),
    FOREIGN KEY (order_id) REFERENCES cust_order(order_id),
    FOREIGN KEY (book_id) REFERENCES book(book_id)
);

-- CREATE table order_history
CREATE TABLE order_history (
    history_id INT AUTO_INCREMENT PRIMARY KEY,
    order_id INT,
    status_id INT,
    changed_on DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (order_id) REFERENCES cust_order(order_id),
    FOREIGN KEY (status_id) REFERENCES order_status(status_id)
);

-- INSERT DATA INTO THE TABLES
INSERT INTO book_language (language_name) VALUES
('English'), ('French'), ('Spanish');

INSERT INTO publisher (publisher_name, contact_email) VALUES
('Penguin Random House', 'contact@penguin.com'),
('HarperCollins', 'info@harpercollins.com');


INSERT INTO author (first_name, last_name) VALUES
('George', 'Orwell'),
('Jane', 'Austen'),
('J.K.', 'Rowling');

INSERT INTO country (country_name) VALUES
('USA'), ('UK'), ('Canada');

INSERT INTO address_status (status_description) VALUES
('Current'), ('Old');

INSERT INTO shipping_method (method_name) VALUES
('Standard'), ('Express'), ('Overnight');

INSERT INTO order_status (status_description) VALUES
('Pending'), ('Shipped'), ('Delivered'), ('Cancelled');

INSERT INTO customer (first_name, last_name, email) VALUES
('Alice', 'Johnson', 'alice.j@gmail.com'),
('Bob', 'Smith', 'bob.smith@outlook.com');

INSERT INTO address (street, city, postal_code, country_id) VALUES
('123 Maple Street', 'New York', '10001', 1),
('456 Oak Avenue', 'London', 'EC1A', 2),
('789 Pine Road', 'Toronto', 'M5V', 3);

INSERT INTO customer_address (customer_id, address_id, status_id) VALUES
(1, 1, 1),
(2, 2, 1),
(2, 3, 2);

INSERT INTO book_author (book_id, author_id) VALUES
(1, 1),
(2, 2),
(3, 3);


INSERT INTO book (title, isbn, publication_year, price, publisher_id, language_id) VALUES
('1984', '9780451524935', 1949, 9.99, 1, 1),
('Pride and Prejudice', '9780141439518', 1813, 7.99, 1, 1),
('Harry Potter and the Sorcerer\'s Stone', '9780439708180', 1997, 10.99, 2, 1);


INSERT INTO cust_order (customer_id, order_date, shipping_method_id, total_amount, status_id) VALUES
(1, '2024-04-01', 1, 17.98, 3),
(2, '2024-04-05', 2, 10.99, 1);

INSERT INTO order_line (order_id, book_id, quantity, price) VALUES
(1, 1, 1, 9.99),
(1, 2, 1, 7.99),
(2, 3, 1, 10.99);


INSERT INTO order_history (order_id, status_id, changed_on) VALUES
(1, 1, '2024-04-01 10:00:00'),
(1, 2, '2024-04-02 15:00:00'),
(1, 3, '2024-04-03 20:00:00'),
(2, 1, '2024-04-05 09:00:00');

-- INDEXING
CREATE INDEX idx_author_last_name ON author(last_name);
CREATE INDEX idx_book_title ON book(title);
CREATE INDEX idx_customer_address_customer ON customer_address(customer_id);
CREATE INDEX idx_order_date ON cust_order(order_date);

-- CREATING ROLES
CREATE ROLE bookstore_admin; 
CREATE ROLE bookstore_staff;
CREATE ROLE bookstore_viewer;
-- PRIVILEGES
GRANT ALL PRIVILEGES ON BookStoreDB.* TO bookstore_admin;
GRANT SELECT, INSERT, UPDATE, DELETE ON BookStoreDB.* TO bookstore_staff;
GRANT SELECT ON BookStoreDB.* TO bookstore_viewer;


-- Create Users and Assign Roles
CREATE USER 'admin_user'@'localhost' IDENTIFIED BY 'adminPass123!';
GRANT bookstore_admin TO 'admin_user'@'localhost';
SET DEFAULT ROLE bookstore_admin TO 'admin_user'@'localhost';

CREATE USER 'staff_user'@'localhost' IDENTIFIED BY 'staffPass123!';
GRANT bookstore_staff TO 'staff_user'@'localhost';
SET DEFAULT ROLE bookstore_staff TO 'staff_user'@'localhost';

CREATE USER 'viewer_user'@'localhost' IDENTIFIED BY 'viewerPass123!';
GRANT bookstore_viewer TO 'viewer_user'@'localhost';
SET DEFAULT ROLE bookstore_viewer TO 'viewer_user'@'localhost';

-- Check privileges for a specific role
SHOW GRANTS FOR bookstore_staff;

-- Test the database by running queries to retrieve and analyze the data
SELECT * FROM author;
-- List all customers
SELECT * FROM customer;
-- Find all orders placed by a specific customer (e.g., customer_id = 2)
SELECT * FROM cust_order
WHERE customer_id = 2;
-- See order history (status changes) for all orders
SELECT * FROM order_history;





















